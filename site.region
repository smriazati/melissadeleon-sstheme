<!doctype html>
<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">

    <!-- include system scripts, page meta, and header code injection -->
    {squarespace-headers}
    
  </head>
  <body id="{squarespace.page-id}" class="{squarespace.page-classes}">

    <div class="intro-animation">
    </div>
    <div class="site-container">

      <header class="site-header">
        <!-- site navigation -->
        <div class="mobile-menu-item mobile-menu-toggle closed"><img src="/assets/icons/menu.png" alt="three thin parallel vertical lines to open the mobile navigation menu"/></div>
        
        <div class="site-navigation-wrapper"> 
          <squarespace:navigation navigationId="siteNav" template="site-navigation" />
          <div id="mobile-nav-extras" class="mobile-menu-item client-portal-button">
            <button class="flat"><a href="/clientportal">Client Portal</a></button>
          </div>

          <nav class="mobile-menu-item social-nav">
            <ul>
              <li><a href="https://www.instagram.com/melissadeleonstyling/" target="_blank"><img src="/assets/icons/instagram.png" alt="" /></a></li>
              <li><a href="https://www.pinterest.com/melissadeleonstyling/_created/" target="_blank"><img src="/assets/icons/pinterest.png" alt="" /></a></li>
              <li><a href="https://www.facebook.com/melissadeleonstyling" target="_blank"><img src="/assets/icons/facebook.png" alt="" /></a></li>
            </ul>
          </nav>
        </div>

        <!-- site title or logo -->
        {.section website}
          <div class="site-logo">
            <a href="/" class="site-title-link">
              <img src="{logoImageUrl}" alt="melissa de leon logo" />
            </a>
          </div>
          <h1 class="visually-hidden site-title-heading" data-content-field="site-title">
            <a href="/" class="site-title-link">{siteTitle}</a>
          </h1>
        {.end}
      </header>

      <!-- cms content injection point -->
      <main class="content-container" role="main" data-content-field="main-content">
       {squarespace.main-content}
      </main>

      <!--Footer with open block field -->
      <footer class="site-footer">
        <div class="footer-social">
          <div class="text-wrapper">
            <h3>Follow</h3>
            <p><a href="https://www.instagram.com/melissadeleonstyling/" target="_blank">@MelissadeLeonStyling</a></p>
          </div>
        </div>
        <div class="footer-nav">
          {#  <squarespace:block-field id="footerBlocks" columns="1" />  }
            <ul>
              <li><a href="/about">About</a></li>
              <li><a href="/offerings">Offerings</a></li>
              <li><a href="/contact">Contact</a></li>
              <li><a href="/press">Press</a></li>
              <li><a href="/clientportal">Client Portal</a></li>
            </ul>
        </div>
        <nav class="footer-cta">
          <a href="/the-edit" class="text-wrapper">
            <h3>Get Inspired, Learn and Shop</h3>
            <p>The Edit</p>
          </a>
        </nav>
        <div class="footer-copyright">
          <p>Â© <span id="copyrightYear"></span> Melissa de Leon Styling. <a href="https://www.otherlove.co/" target="_blank">Made with Otherlove.</a></p>
        </div>
        <a href="/the-edit" class="footer-icon">
            <div class="icon">
              <img src="/assets/icons/arrow.png" alt="white arrow surrounded by a circle pointing to the right" />
          </div>
        </a>
      </footer>

    </div>

    <!-- combo and minify scripts when not logged in -->
    <squarespace:script src="blocks-classes.min.js" combo="{.if authenticatedAccount}false{.or}true{.end}" />

    <squarespace:script src="site.js" combo="{.if authenticatedAccount}false{.or}true{.end}" />

    <!-- other scripts, and footer code injection -->
    {squarespace-footers}

<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.6.1/gsap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.6.1/CSSRulePlugin.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.6.1/ScrollTrigger.min.js"></script>
  <script>

    gsap.registerPlugin(ScrollTrigger);

    ScrollTrigger.defaults({
      toggleActions: "play play resume reset"
    });

    const ssData = {@|json};
    // ssData.collection.urlId
    function printYear() {
      var d = new Date();
      var n = d.getFullYear();
      document.getElementById("copyrightYear").innerHTML = n;
    }
    

    // offerings page > captions are links
    function convertCaptionsIntoLinks() {
      const captions = document.querySelectorAll('main figcaption.image-caption-wrapper');
      {#  console.log(captions);  }
      captions.forEach(c => {
        const href = c.previousElementSibling.getAttribute("href");
        var caption = c.querySelector('.image-caption');
        const captionText = caption.outerHTML;

        if (href && captionText) {
          var a = document.createElement('a');
          a.href = href;
          a.classList.add('caption-wrapper-link')
          a.innerHTML = captionText;

          c.insertBefore(a, caption);
          caption.remove();
          
        }
      })
    }

    function checkForAccordion() {
      const accordion = document.querySelector('.accordion');
      if (accordion) {
        return true;
      } else {
        return false;
      }
    }

    function activateAccordion() {
      const accordions = document.querySelectorAll('main .accordion');
      accordions.forEach(accordion => {
        const items = accordion.querySelectorAll('.accordion-item');
        items.forEach(item => {
          item.addEventListener('click', event => {

            const itemContent = item.querySelector('.accordion-content');

            if (item.classList.contains('closed')) {
              item.classList.add('open');
              item.classList.remove('closed');

              if (gsap) {
                gsap.set(itemContent, {
                  y: -10,
                  'opacity': 0,
                })
                gsap.to(itemContent, {
                  y: 0,
                  'opacity': 1,
                  duration: .6
                })
              }

            } else {
              item.classList.add('closed');
              item.classList.remove('open');

              if (gsap) {
                gsap.set(itemContent, {
                  y: 0,
                  'opacity': 1
                })
                gsap.to(itemContent, {
                  y: -10,
                  'opacity': 0,
                  duration: .3
                })
              }

            }
          })
        })
      })

    }

    function checkForFeaturedSinglePage() {
      const isFeatured = document.querySelectorAll('article.featured');
      const hasBlogItem = document.querySelectorAll('.blog-item');
      if (isFeatured.length > 0 && hasBlogItem.length > 0) {
        return true;
      } else {
        return false;
      }
    }

    function emFirstWordsOfCardCaption() {

      {#  CARDS  }
      const cards = document.querySelectorAll('.card');
      cards.forEach( card => {
        const caption = card.querySelector('figcaption .image-caption p');
        var captionText = caption.textContent;
        const firstTwoWords = captionText.split(' ').slice(0,2).join(' ');
      
        const emTag = document.createElement('em');
        emTag.innerHTML = firstTwoWords;

        caption.innerHTML = emTag.outerHTML + captionText.replace(firstTwoWords.toString(), '');
      })


    }

  function showDescriptionAsOverlay() {
    const summary = document.querySelector('.summary-block-collection-type-commercialGallery');
    const thumbs = summary.querySelectorAll('.summary-thumbnail-container');
    thumbs.forEach( thumb => {
      const description = thumb.dataset.description;
      const newDiv = document.createElement('div');
      newDiv.innerHTML = description;
      newDiv.classList.add('thumbnail-description')
      thumb.insertBefore(newDiv, thumb.firstChild);
    })    
  }

    function shrinkLogoOnScroll() {
      const header = document.querySelector('.site-header');
      const logo = header.querySelector('.site-logo');
      const navItems = header.querySelectorAll('.site-navigation-item');
      const hero = document.querySelector('.hero')

      const windowWidth = window.innerWidth;
      let isMobile;

      if (windowWidth < 768) {
        isMobile = true;
      } else {
        isMobile = false;
      }

      if (isMobile) {
        console.log('is mobile');
      } else {
        gsap.set(logo, {
          'width': '430px'
        })

        gsap.to(logo, {
            scrollTrigger: {
              trigger: hero,
              start: "bottom-=170 top", 
              end: "+=300",
            },
            'width': '220px'
        });
        navItems.forEach(navItem => {
            gsap.to(navItem, {
              scrollTrigger: {
                trigger: hero,
                start: "bottom top", 
                end: "+=300",
              },
              'padding-top': '15px',
              'padding-bottom': '15px'
          });
      });
      }
    }

    function setCardAnimation() {
      const trigger = document.querySelector('main .submark-headline');
      const refs = document.querySelectorAll('main .card');
      refs.forEach(card => {
          gsap.to(card, {
            scrollTrigger: {
              trigger: trigger,
              start: "top 10%", 
              scrub: .3
            },
            y: '-50vh',
            'margin-bottom': '15px',
          });

        if (window.innerWidth < 768) {
          gsap.to(card.parentNode, {
            scrollTrigger: {
              trigger: trigger,
              start: "top 10%", 
              scrub: .3
            },
            'margin-bottom': '-300px',
          });
        }
      });
    }

    function setCTAMarqueeAnimation() {

      function createSlider() {
        {#  console.log('making a slider')  }
        let newSlider = document.createElement('p');
        newSlider.innerHTML = s1.innerHTML;
        parent.append(newSlider);
        addAnimation(newSlider);
      } 

      function killSlider(slider) {
        if (slider) {
          slider.remove();
        }
      }  

      function addAnimation(slider) {
        if (gsap) {
          let madeNew = false;
          gsap.set(slider, {
            x: (sliderWidth * -1) + 'px',
          })
          var anim = gsap.to(slider, {
            x: containerWidth + 'px',
            duration: duration,
            ease: 'linear',
            onUpdate:  () => {
              if (anim.time() > delay) {
                if (!madeNew) {
                  createSlider();
                  madeNew = true;
                } 
              }
            },
            onComplete:() => killSlider(slider)
          })
        }
      }

      const s1 = document.querySelector('main .cta-text p');
      let parent;
      let duration = 12;
      let delay = duration / 2;
      let slideWidth;
      let containerWidth;

      if (s1) {
        s1.style.display = 'inline';
        if (window.innerWidth < 768) {
          sliderWidth = window.innerWidth + 300
        } else {
          sliderWidth = s1.offsetWidth;
        }
        let sliderHeight = s1.offsetHeight;
        parent = s1.parentElement;
        const parentContainer = parent.parentElement;
        parent.classList.add('animated-slider-container')
        parentContainer.classList.add('animated-slider-container-wrapper')
          containerWidth = parentContainer.offsetWidth;
        s1.remove();

        {#  remove extras.. maybe page editor created extra by accident? delete them  }
        const extraSlides = document.querySelectorAll('main .cta-text p');
        extraSlides.forEach(s => {
          s.remove();
        })

        if (window.innerWidth < 768) {
          sliderWidth = window.innerWidth + 300
          parentContainer.style.height = sliderHeight + 'px';

        } else {
          parentContainer.style.height = sliderHeight + 20 + 'px';
        }
              
        createSlider();
      }
      

    }


    function setPhotoBackgroundAnimation() {
      const container = document.querySelector('.bio-image');
      const background = document.createElement('div');
      const endTrigger = document.querySelector('.site-footer');
      let figure;
      if (container) {
        figure = container.querySelector('figure');
        background.classList.add('background-extending');
        figure.append(background);
      }
      if (gsap && window.innerWidth > 768) {
        gsap.set(background, {
          'height': '0%'
        })
        gsap.to(background, {
            scrollTrigger: {
              trigger: container,
              start: "top top+=50%",
              endTrigger: endTrigger,
              end: 'top bottom',
              scrub: 1.1
            },
            'height': '+=100%'
        });
      }
    }


    function setPhotoBackgroundAnimationPersonalOfferings() {
      const container = document.querySelector('.intro-image-wrapper');
      const background = container.querySelector('.clay-bg')
      const endTrigger = document.querySelector('.cta-banner');
      if (gsap && window.innerWidth > 768) {
        gsap.set(background, {
          'height': '0%'
        })
        gsap.to(background, {
            scrollTrigger: {
              trigger: container,
              start: "top top+=50%",
              endTrigger: endTrigger,
              end: 'top bottom',
              scrub: 1.1
            },
            'height': '+=100%'
        });
      }
    }

    function addMarginForFixedHeader() {
      const header = document.querySelector('.site-header');
      if (header) {
        const hW = header.offsetHeight;
        const main = header.nextElementSibling;
        main.style.marginTop = hW + 'px';
      }
    }

    function toggleMenu() {
      const header = document.querySelector('.site-header');
      if (header.classList.contains('site-header-open')) {
        header.classList.remove('site-header-open');
      } else {
        header.classList.add('site-header-open');
      }
    }

    function setPhaseFadeOutAnimation(self, section) {

      console.log("toggled, isActive:", self.isActive, section)

      if (self.isActive) {
        gsap.to(section, {
          autoAlpha: 1,
          x: 0
        })
      } else {
        gsap.to(section, {
          autoAlpha: 0,
        })
      }

    }
    
    function setPhasesAnimation() {
      if (gsap) {
        let sections = gsap.utils.toArray(".phase-item");
        sections.forEach((section, i) => {
          if (window.innerWidth > 768) {
            gsap.set(section, {
              autoAlpha: 0,
              x: -100
            })
            ScrollTrigger.create({
              trigger: section,
              start: "top 10%", 
              pin: true, 
              pinSpacing: true,
              scrub: 0.9,
              onToggle: self => setPhaseFadeOutAnimation(self, section)
            });
          } else {
            gsap.set(section, {
              autoAlpha: 0,
              x: -100
            })
            gsap.to(section, {
              autoAlpha: 1,
              x: 0,
              scrollTrigger: {
                trigger: section,
                start: "top bottom", 
                end: "+=300",
                scrub: true
              }
            })
          }
        })
      }
    }

let resizeTimer;
window.addEventListener('resize', function(e) {
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(function() {

      const currentPage = ssData.collection.urlId;
      addMarginForFixedHeader();
      if (currentPage === 'home') {
        shrinkLogoOnScroll();
        setCardAnimation();
        setCTAMarqueeAnimation();
        setPhotoBackgroundAnimation();
      }

      if (currentPage === 'personal') {
        setPhotoBackgroundAnimationPersonalOfferings();
        setPhasesAnimation();
      }
              
    }, 250);
});

function addExtrasToMobileMenu() {
  const header = document.querySelector('.site-header');
  const nav = header.querySelector('.site-navigation');
  const extras = header.querySelector('#mobile-nav-extras');

  let newExtras = document.createElement('div');
  newExtras.innerHTML = extras.innerHTML;
  newExtras.classList.add('mobile-menu-item');
  newExtras.classList.add('client-portal-button');

  nav.append(newExtras);
  extras.remove();

}

function setIntroAnimation() {

  let animation = document.querySelector('.intro-animation');
  animation.classList.add('intro-animation-active');

}

function detectClientTemplate() {
  let isClientPage = false;
  const clientId = document.getElementById('client-template');
  if (clientId) {
    isClientPage = true;
  }
  console.log(isClientPage);
  if (isClientPage) {
    document.querySelector('body').classList.add('client-template');
  }
}

document.addEventListener("DOMContentLoaded", function(event) { 
      printYear();

      addExtrasToMobileMenu();
      detectClientTemplate();
      
      const button = document.querySelector('.mobile-menu-toggle');
      button.addEventListener("click", toggleMenu);

      const currentPage = ssData.collection.urlId;
      document.querySelector('body').classList.add(currentPage)

      if (currentPage === 'offerings') {
        convertCaptionsIntoLinks();
      }

      addMarginForFixedHeader();

      var hasAccordion = checkForAccordion();
      if (hasAccordion) {
        activateAccordion();
      }

      const summary = document.querySelector('.summary-block-collection-type-commercialGallery');
      if (summary) {
        showDescriptionAsOverlay();
      }

      var isFeaturedItem = checkForFeaturedSinglePage();
      if (isFeaturedItem) {
        document.querySelector('body').classList.add('featured-post')
      }

      if (currentPage === 'home') {
        emFirstWordsOfCardCaption();
        shrinkLogoOnScroll();
        setCardAnimation();
        setCTAMarqueeAnimation();
        setPhotoBackgroundAnimation();

        var ls = sessionStorage.getItem('namespace.visited');
        if (ls == null) {
            setIntroAnimation();
            sessionStorage.setItem('namespace.visited', 1)
        }
      }

      if (currentPage === 'personal') {
        setPhotoBackgroundAnimationPersonalOfferings();
        setPhasesAnimation();
      }

    });
    
  </script>
  </body>
</html>
